{"version":3,"file":"static/js/460.4aa4e875.chunk.js","mappings":"yNAoCA,UA9Ba,WACX,OAAwBA,EAAAA,EAAAA,UAAS,CAAC,CAAC,IAAnC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,SACRE,EAAAA,EAAAA,YAAU,WAAM,wCACd,uGACyBC,EAAAA,EAAAA,IAAUH,GADnC,OACQI,EADR,OAEQN,EAAOM,EAASN,KACtBC,EAAQD,GAHV,2CADc,yBAAC,WAAD,wBAOdO,EACD,GAAE,CAACL,IAIJ,OACE,wBACGF,EAAKQ,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OACR,0BACGA,IACC,gBAAKC,IAPI,mCAOcD,EAAcE,IAAKF,KAE5C,wBAAKF,KACL,uBAAIC,MALGF,EADD,KAWf,C,+LChCKM,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAIlB,IAAMC,EAAS,mCAAG,oGACAD,EAAAA,EAAAA,IAAA,sCAAyCD,IADzC,cACjBT,EADiB,yBAEhBA,EAASY,MAFO,2CAAH,qDAKTC,EAAW,mCAAG,WAAMC,GAAN,uFACFJ,EAAAA,EAAAA,IAAA,gCACID,EADJ,kBACqBK,IAFnB,cACnBd,EADmB,yBAIlBA,EAASY,MAJS,2CAAH,sDAOXG,EAAc,mCAAG,WAAMnB,GAAN,uFACLc,EAAAA,EAAAA,IAAA,iBAAoBd,EAApB,oBAAuCa,IADlC,cACtBT,EADsB,yBAErBA,EAASY,MAFY,2CAAH,sDAIdb,EAAS,mCAAG,WAAMH,GAAN,uFACAc,EAAAA,EAAAA,IAAA,iBACXd,EADW,4BACgBa,IAFhB,cACjBT,EADiB,yBAIhBA,EAASY,MAJO,2CAAH,sDAMTI,EAAY,mCAAG,WAAMpB,GAAN,uFACHc,EAAAA,EAAAA,IAAA,gBACZd,EADY,4BACea,IAFZ,cACpBT,EADoB,yBAInBA,EAASY,MAJU,2CAAH,qD","sources":["components/MovieDetails/Cast/Cast.jsx","services/api.jsx"],"sourcesContent":["// /movies/:movieId/cast - компонент Cast, информация о актерском составе. Рендерится на странице\n\nimport { castMovie } from 'services/api';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([{}]);\n  const { movieId } = useParams();\n  useEffect(() => {\n    async function fetchData() {\n      const response = await castMovie(movieId);\n      const cast = response.cast;\n      setCast(cast);\n    }\n\n    fetchData();\n  }, [movieId]);\n\n  const baseImgUrl = 'https://image.tmdb.org/t/p/w300/';\n\n  return (\n    <ul>\n      {cast.map(({ id, name, character, profile_path }) => (\n        <li key={id}>\n          {profile_path && (\n            <img src={baseImgUrl + profile_path} alt={profile_path} />\n          )}\n          <h4>{name}</h4>\n          <p>{character}</p>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = '429901df921e7a06d9fe261cd0c4ab69';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\n// https://api.themoviedb.org/3movie/315162/credits?api_key=429901df921e7a06d9fe261cd0c4ab69\n\nexport const getMovies = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const searchMovie = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data;\n};\n\nexport const fetchMovieById = async movieId => {\n  const response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n};\nexport const castMovie = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.data;\n};\nexport const reviewsMovie = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\n/* Маршруты */\n\n/* '/' - компонент Home, домашняя страница со списком популярных кинофильмов.\n'/movies' - компонент Movies, страница поиска фильмов по ключевому слову.\n'/movies/:movieId' - компонент MovieDetails, страница с детальной информацией о кинофильме.\n/movies/:movieId/cast - компонент Cast, информация о актерском составе. Рендерится на странице MovieDetails.\n/movies/:movieId/reviews - компонент Reviews, информация об обзорах. Рендерится на странице MovieDetails. */\n"],"names":["useState","cast","setCast","movieId","useParams","useEffect","castMovie","response","fetchData","map","id","name","character","profile_path","src","alt","API_KEY","axios","getMovies","data","searchMovie","query","fetchMovieById","reviewsMovie"],"sourceRoot":""}