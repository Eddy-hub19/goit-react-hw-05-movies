{"version":3,"file":"static/js/254.e52dbcf8.chunk.js","mappings":"8PAuCA,EAjCa,WACX,OAA4BA,EAAAA,EAAAA,UAAS,CAAC,CAAC,IAAvC,eAAOC,EAAP,KAAeC,EAAf,MACAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,uGACyBC,EAAAA,EAAAA,MADzB,OACQC,EADR,OAEQC,EAAMD,EAASE,QACrBL,EAAUI,GAHZ,4CADc,uBAAC,WAAD,wBAOdE,EACD,GAAE,IAIH,OACE,4BACE,eAAIC,UAAU,gBAAd,6BACA,eAAIA,UAAU,aAAd,SACGR,EAAOS,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,cAAd,OACV,eAA0BJ,UAAU,YAApC,UACE,UAAC,KAAD,CAAMK,GAAE,iBAAYH,GAApB,UACGC,EACAC,IACC,gBAAKE,MAAM,MAAMC,IAXZ,mCAW8BH,EAAeI,IAAKL,QAJpDM,KAAKC,OAAOR,GADX,QAanB,C,+LCnCKS,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAIlB,IAAMjB,EAAS,mCAAG,oGACAiB,EAAAA,EAAAA,IAAA,sCAAyCD,IADzC,cACjBf,EADiB,yBAEhBA,EAASiB,MAFO,2CAAH,qDAKTC,EAAW,mCAAG,WAAMC,GAAN,uFACFH,EAAAA,EAAAA,IAAA,gCACID,EADJ,kBACqBI,IAFnB,cACnBnB,EADmB,yBAIlBA,EAASiB,MAJS,2CAAH,sDAOXG,EAAc,mCAAG,WAAMC,GAAN,uFACLL,EAAAA,EAAAA,IAAA,iBAAoBK,EAApB,oBAAuCN,IADlC,cACtBf,EADsB,yBAErBA,EAASiB,MAFY,2CAAH,sDAIdK,EAAS,mCAAG,WAAMD,GAAN,uFACAL,EAAAA,EAAAA,IAAA,iBACXK,EADW,4BACgBN,IAFhB,cACjBf,EADiB,yBAIhBA,EAASiB,MAJO,2CAAH,sDAMTM,EAAY,mCAAG,WAAMF,GAAN,uFACHL,EAAAA,EAAAA,IAAA,gBACZK,EADY,4BACeN,IAFZ,cACpBf,EADoB,yBAInBA,EAASiB,MAJU,2CAAH,qD","sources":["Pages/Home/Home.jsx","services/api.jsx"],"sourcesContent":["import './Home.styled.css';\n\nimport { useEffect, useState } from 'react';\nimport { getMovies } from 'services/api';\nimport { Link } from 'react-router-dom';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([{}]);\n  useEffect(() => {\n    async function fetchData() {\n      const response = await getMovies();\n      const res = response.results;\n      setMovies(res);\n    }\n\n    fetchData();\n  }, []);\n\n  const baseImgUrl = 'https://image.tmdb.org/t/p/w500/';\n\n  return (\n    <div>\n      <h2 className=\"trendingTitle\">Trending today</h2>\n      <ul className=\"moviesList\">\n        {movies.map(({ id, title, backdrop_path }) => (\n          <li key={Math.random(id)} className=\"movieItem\">\n            <Link to={`movies/${id}`}>\n              {title}\n              {backdrop_path && (\n                <img width=\"300\" src={baseImgUrl + backdrop_path} alt={title} />\n              )}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst API_KEY = '429901df921e7a06d9fe261cd0c4ab69';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\n// https://api.themoviedb.org/3movie/315162/credits?api_key=429901df921e7a06d9fe261cd0c4ab69\n\nexport const getMovies = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const searchMovie = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data;\n};\n\nexport const fetchMovieById = async movieId => {\n  const response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n};\nexport const castMovie = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.data;\n};\nexport const reviewsMovie = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\n/* Маршруты */\n\n/* '/' - компонент Home, домашняя страница со списком популярных кинофильмов.\n'/movies' - компонент Movies, страница поиска фильмов по ключевому слову.\n'/movies/:movieId' - компонент MovieDetails, страница с детальной информацией о кинофильме.\n/movies/:movieId/cast - компонент Cast, информация о актерском составе. Рендерится на странице MovieDetails.\n/movies/:movieId/reviews - компонент Reviews, информация об обзорах. Рендерится на странице MovieDetails. */\n"],"names":["useState","movies","setMovies","useEffect","getMovies","response","res","results","fetchData","className","map","id","title","backdrop_path","to","width","src","alt","Math","random","API_KEY","axios","data","searchMovie","query","fetchMovieById","movieId","castMovie","reviewsMovie"],"sourceRoot":""}