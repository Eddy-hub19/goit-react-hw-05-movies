{"version":3,"file":"static/js/947.944756fb.chunk.js","mappings":"iOAkDA,UA/CqB,WACnB,OAAkCA,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WAAM,wCACd,qGACyBC,EAAAA,EAAAA,IAAeH,GADxC,OACQI,EADR,OAEEL,EAAaK,GAFf,4CADc,uBAAC,WAAD,wBAMdC,EACD,GAAE,CAACL,IAGJ,IAAKF,EACH,MAAO,UAET,IAAQQ,EAAiDR,EAAjDQ,YAAaC,EAAoCT,EAApCS,MAAOC,EAA6BV,EAA7BU,GAAIC,EAAyBX,EAAzBW,WAAYC,EAAaZ,EAAbY,SAC5C,OACE,iCACE,SAAC,KAAD,CAAMC,GAAI,IAAV,gCACA,yBACE,0BACGL,GACC,gBAAKM,MAAM,MAAMC,IAXR,mCAW0BP,EAAaQ,IAAKP,IAErD,YAEF,iBAAKQ,MAAO,CAAEC,QAAS,aAAvB,WACE,wBAAKT,KACL,0BAAOE,KACP,uBAAIC,QAEN,2BACE,6CACA,SAAC,KAAD,CAAMC,GAAE,OAAR,sBAEF,yBACE,SAAC,KAAD,CAAMA,GAAE,UAAR,yBAhBKH,MAoBX,SAAC,KAAD,MAGL,C,+LC9CKS,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAIlB,IAAMC,EAAS,mCAAG,oGACAD,EAAAA,EAAAA,IAAA,sCAAyCD,IADzC,cACjBb,EADiB,yBAEhBA,EAASgB,MAFO,2CAAH,qDAKTC,EAAW,mCAAG,WAAMC,GAAN,uFACFJ,EAAAA,EAAAA,IAAA,gCACID,EADJ,kBACqBK,IAFnB,cACnBlB,EADmB,yBAIlBA,EAASgB,MAJS,2CAAH,sDAOXjB,EAAc,mCAAG,WAAMH,GAAN,uFACLkB,EAAAA,EAAAA,IAAA,iBAAoBlB,EAApB,oBAAuCiB,IADlC,cACtBb,EADsB,yBAErBA,EAASgB,MAFY,2CAAH,sDAIdG,EAAS,mCAAG,WAAMvB,GAAN,uFACAkB,EAAAA,EAAAA,IAAA,iBACXlB,EADW,4BACgBiB,IAFhB,cACjBb,EADiB,yBAIhBA,EAASgB,MAJO,2CAAH,sDAMTI,EAAY,mCAAG,WAAMxB,GAAN,uFACHkB,EAAAA,EAAAA,IAAA,gBACZlB,EADY,4BACeiB,IAFZ,cACpBb,EADoB,yBAInBA,EAASgB,MAJU,2CAAH,qD","sources":["components/MovieDetails/MovieDetails.jsx","services/api.jsx"],"sourcesContent":["import { fetchMovieById } from 'services/api';\nimport { useEffect, useState } from 'react';\nimport { Link, Outlet, useParams } from 'react-router-dom';\nconst MovieDetails = () => {\n  const [dataMovie, setDataMovie] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function fetchData() {\n      const response = await fetchMovieById(movieId);\n      setDataMovie(response);\n    }\n\n    fetchData();\n  }, [movieId]);\n\n  const baseImgUrl = 'https://image.tmdb.org/t/p/w500/';\n  if (!dataMovie) {\n    return 'loading';\n  }\n  const { poster_path, title, id, popularity, overview } = dataMovie;\n  return (\n    <>\n      <Link to={'/'}>back üîô</Link>\n      <ul>\n        <li key={id}>\n          {poster_path ? (\n            <img width=\"300\" src={baseImgUrl + poster_path} alt={title} />\n          ) : (\n            'no image'\n          )}\n          <div style={{ padding: '40px 10px' }}>\n            <h2>{title}</h2>\n            <span>{popularity}</span>\n            <p>{overview}</p>\n          </div>\n          <li>\n            <p>Additional info:</p>\n            <Link to={`cast`}>Cast</Link>\n          </li>\n          <li>\n            <Link to={`reviews`}>Reviews</Link>\n          </li>\n        </li>\n      </ul>\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = '429901df921e7a06d9fe261cd0c4ab69';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\n// https://api.themoviedb.org/3movie/315162/credits?api_key=429901df921e7a06d9fe261cd0c4ab69\n\nexport const getMovies = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const searchMovie = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data;\n};\n\nexport const fetchMovieById = async movieId => {\n  const response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n};\nexport const castMovie = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.data;\n};\nexport const reviewsMovie = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\n/* –ú–∞—Ä—à—Ä—É—Ç—ã */\n\n/* '/' - –∫–æ–º–ø–æ–Ω–µ–Ω—Ç Home, –¥–æ–º–∞—à–Ω—è—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –∫–∏–Ω–æ—Ñ–∏–ª—å–º–æ–≤.\n'/movies' - –∫–æ–º–ø–æ–Ω–µ–Ω—Ç Movies, —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–æ–∏—Å–∫–∞ —Ñ–∏–ª—å–º–æ–≤ –ø–æ –∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É.\n'/movies/:movieId' - –∫–æ–º–ø–æ–Ω–µ–Ω—Ç MovieDetails, —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∫–∏–Ω–æ—Ñ–∏–ª—å–º–µ.\n/movies/:movieId/cast - –∫–æ–º–ø–æ–Ω–µ–Ω—Ç Cast, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∞–∫—Ç–µ—Ä—Å–∫–æ–º —Å–æ—Å—Ç–∞–≤–µ. –†–µ–Ω–¥–µ—Ä–∏—Ç—Å—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ MovieDetails.\n/movies/:movieId/reviews - –∫–æ–º–ø–æ–Ω–µ–Ω—Ç Reviews, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ–±–∑–æ—Ä–∞—Ö. –†–µ–Ω–¥–µ—Ä–∏—Ç—Å—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ MovieDetails. */\n"],"names":["useState","dataMovie","setDataMovie","movieId","useParams","useEffect","fetchMovieById","response","fetchData","poster_path","title","id","popularity","overview","to","width","src","alt","style","padding","API_KEY","axios","getMovies","data","searchMovie","query","castMovie","reviewsMovie"],"sourceRoot":""}